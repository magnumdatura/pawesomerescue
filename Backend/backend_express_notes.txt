6 files needed for an express app database setup

1. env
2. db
3. model
4. server.js
5. middleware (authentication)
6. routes (endpoints)
    method/verb
    endpoints
    validation (npm i express-validator) https://stackoverflow.com/questions/55813623/using-express-validator-to-check-if-input-is-a-username-or-email
    verification
    req/res


App Project

1. Owner of app company: 1. everyone in my company can 2. see everyone in the database whos using my app / is a member [[ ADMIN ]] 

--> need to make ADMIN profile
eg "...@desmondinc.com" -> as long as you have this in your email you have admin privileges

    - name

    - company

    - contact: 
        address (optional)
        email (required)
        phone (optional)
    
    -date they created their membership // date joined

    - isAdmin: boolean
    **can also edit / delete members' profile 

    ** username/password: @ least 12 characters, letters and numbers only no special characters

2. CLient of company: see only his own profile, **and the profiles of his company friends [[ USER ]]
    - login/logout
    - create new profile
    - can input and edit their own information
    - members cannot delete their own profile

** when people say delete, do they want to archive or perma-delete? Here just delete, no archive.
** never ask clients if they wanna hash the password, just do it. They won't know the technical ideas, terms. Speak to client like a layman. 
** track edit history --> how?

Front end:
    login page
    profile page
    search bar 

Back end:
    noSQL mongo:
    
    users:
        username // use EMAIL (from contact) here instead || need to verify the email (esp for lost passwords) 
        {type: String, required: true, unique: true}

        hash
        name
        company
        contact: {address, phone}

        date default: Date.now (creates date for you without you having to put it in)

question: need to filter by anything?


ENDPOINTS:
https://docs.google.com/spreadsheets/d/1IU0ruuR8wHjLfTvdaI-at1Mfa7aZLYMqtBzoFLqoTFg/edit#gid=0
PUT /api/users/user [[ registration ]]                  http status codes
POST /api/users/login [[ login ]]
if isAdmin === true, GET /api/users/users [[ display all users ]]
POST /api/users/user [[ display 1 user ]]               {name, email}


username / email as login

npm init -y
npm i express
npm i -D nodemon
npm i express-validator
npm i jsonwebtoken uuid
npm i bcrypt
npm i mongoose